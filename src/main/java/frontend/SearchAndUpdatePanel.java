package frontend;


import backend.ManagerRole;
import backend.Student;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Pc
 */
public class SearchAndUpdatePanel extends javax.swing.JPanel {
 ManagerRole mr;
 DefaultTableModel model;

   
    public SearchAndUpdatePanel() {
        initComponents();
        mr= new ManagerRole();
        model=(DefaultTableModel)studentTable.getModel();
        displayAll();
        setVisible(true);
    }
private void addStudentToTable(Student s){
   Object[]row = new Object[6];
   row[0]=s.getId();
   row[1]=s.getFullName();
   row[2]= s.getAge();
   row[3]= s.getGender();
   row[4]= s.getDepartment();
   row[5]= s.getGPA();
   model.addRow(row);
}

    private void loadStudentsToTable() {
        model.setRowCount(0);
        Student[] allStudents = mr.getListOfStudents();
        if (allStudents == null || allStudents.length == 0) {
            JOptionPane.showMessageDialog(this, "No students are available in the database.",
                    "Database Empty", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        for (Student s : allStudents) {
            if (s != null)
                addStudentToTable(s);
        }
    }


private void displayAll(){
    model.setRowCount(0);
    Student[] studentLists= mr.getListOfStudents();
    for(int i=0;i<studentLists.length;i++){
        Student current=studentLists[i];
        if(current==null)continue;
        Object[]row = new Object[6];
   row[0]=current.getId();
   row[1]=current.getFullName();
   row[2]= current.getAge();
   row[3]= current.getGender();
   row[4]= current.getDepartment();
   row[5]= current.getGPA();
   model.addRow(row);}
}
private void fillFormFromTable(int row) {
        txtId.setText(model.getValueAt(row, 0).toString());
        txtName.setText(model.getValueAt(row, 1).toString());
        txtAge.setText(model.getValueAt(row, 2).toString());
        genderBox.setSelectedItem(model.getValueAt(row, 3).toString());
        departmentBox.setSelectedItem(model.getValueAt(row, 4).toString());
        txtGPA.setText(model.getValueAt(row, 5).toString());
    }

    private void clearForm() {
        txtId.setText("");
        txtName.setText("");
        txtAge.setText("");
        txtGPA.setText("");
        genderBox.setSelectedIndex(0);
        departmentBox.setSelectedIndex(0);
    }
    
    
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        javax.swing.JLabel searchField = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        javax.swing.JButton btnSearchName = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        javax.swing.JLabel searchId = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        genderBox = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        departmentBox = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        txtGPA = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnSearchId = new javax.swing.JButton();
        btnSortName = new javax.swing.JButton();
        btnSortId = new javax.swing.JButton();
        btnSortGpa = new javax.swing.JButton();

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(0, 51, 204));

        searchField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchField.setForeground(new java.awt.Color(255, 255, 255));
        searchField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchField.setText("Search by Name: ");

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        btnSearchName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearchName.setText("Search by Name");
        btnSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNameActionPerformed(evt);
            }
        });

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Full Name", "Age", "Gender", "Department", "GPA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.setShowGrid(false);
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTable);

        searchId.setBackground(new java.awt.Color(255, 255, 255));
        searchId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchId.setForeground(new java.awt.Color(255, 255, 255));
        searchId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchId.setText("Search by ID: ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Student");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID:");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name: ");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Age: ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Gender");

        genderBox.setEditable(true);
        genderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        genderBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Department");

        departmentBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer and Communications", "Mechatronics", "Electromechanics", "Biomedical" }));
        departmentBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("GPA");

        txtGPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGPAActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnSearchId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearchId.setText("Search by ID");
        btnSearchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIdActionPerformed(evt);
            }
        });

        btnSortName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSortName.setText("Sort by Name");
        btnSortName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortNameActionPerformed(evt);
            }
        });

        btnSortId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSortId.setText("Sort by Id");
        btnSortId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortIdActionPerformed(evt);
            }
        });

        btnSortGpa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSortGpa.setText("Sort by GPA");
        btnSortGpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortGpaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtId)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(genderBox, 0, 87, Short.MAX_VALUE)
                                        .addComponent(txtName)
                                        .addComponent(txtAge))))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(departmentBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtGPA)))
                            .addComponent(btnUpdate))
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSortName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSortGpa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSortId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(btnRefresh))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearchName)
                            .addComponent(btnSearchId, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchId)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchId))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(departmentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnSortName)
                        .addGap(36, 36, 36)
                        .addComponent(btnSortId)
                        .addGap(45, 45, 45)
                        .addComponent(btnSortGpa)
                        .addGap(40, 40, 40)
                        .addComponent(btnRefresh)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void btnSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNameActionPerformed
        String name = tfName.getText().trim();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a name to search", "Try again", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Student[] allStudents = mr.getListOfStudents();
        model.setRowCount(0);
        boolean found = false;

        for (Student s : allStudents) {
            if (s != null && s.getFullName().equalsIgnoreCase(name)) {
                addStudentToTable(s);
                found = true;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "No students found with name: " + name);
            loadStudentsToTable();
        }
      
    }//GEN-LAST:event_btnSearchNameActionPerformed
private int oldSelectedId = -1;
    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
    int row = studentTable.getSelectedRow();

    if (row < 0) {
        JOptionPane.showMessageDialog(
            this,
            "Please select a row in the table.",
            "Invalid Selection",
            JOptionPane.ERROR_MESSAGE
        );
        return;
    }

    // store the selected student’s original ID for updating later
    oldSelectedId = Integer.parseInt(studentTable.getValueAt(row, 0).toString());

    // Fill the form fields from the selected row
    txtId.setText(studentTable.getValueAt(row, 0).toString());
    txtName.setText(studentTable.getValueAt(row, 1).toString());
    txtAge.setText(studentTable.getValueAt(row, 2).toString());
    genderBox.setSelectedItem(studentTable.getValueAt(row, 3).toString());
    departmentBox.setSelectedItem(studentTable.getValueAt(row, 4).toString());
    txtGPA.setText(studentTable.getValueAt(row, 5).toString());
    }//GEN-LAST:event_studentTableMouseClicked

    private void genderBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderBoxActionPerformed

    private void departmentBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentBoxActionPerformed

    private void txtGPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGPAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGPAActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSearchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIdActionPerformed
        String Id = tfID.getText().trim();
        if (Id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the ID field", "Try again", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int id = Integer.parseInt(Id);
            Student s = mr.searchStudent(id);
            model.setRowCount(0);
            if (s != null) {
                addStudentToTable(s);
            } else {
                JOptionPane.showMessageDialog(this, "No student found with ID: " + id);
                loadStudentsToTable();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid ID format.");
        }
    }//GEN-LAST:event_btnSearchIdActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    String idText = txtId.getText().trim();
    String name = txtName.getText().trim();
    String ageText = txtAge.getText().trim();
    String gpaText = txtGPA.getText().trim();
    String gender = genderBox.getSelectedItem().toString();
    String department = departmentBox.getSelectedItem().toString();
    if (idText.isEmpty() || name.isEmpty() || ageText.isEmpty() || gpaText.isEmpty() ||
        gender.equals("Select Gender") || department.equals("Select department")) {
        JOptionPane.showMessageDialog(this, "Please fill all fields correctly!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int age;
    double gpa;
    int id;
    int id1;

    try {
        boolean hasNumber = false;
        boolean hasInvalidChar = false;
        for (int i = 0; i < name.length(); i++) {
            char c = name.charAt(i);
            if (Character.isDigit(c)) {
                hasNumber = true;
                break;
            } else if (!Character.isLetter(c) && c != ' ') {
                hasInvalidChar = true;
                break;
            }
        }
        if (hasNumber) throw new Exception("Name cannot contain numbers!");
        if (hasInvalidChar) throw new Exception("Name can contain only letters and spaces!");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Invalid Name", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        if (oldSelectedId == -1) {
            JOptionPane.showMessageDialog(this, "Please select a student from the table first!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        id = oldSelectedId;
        id1 = Integer.parseInt(txtId.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid ID format", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        age = Integer.parseInt(ageText);
        if (age <= 0) {
            JOptionPane.showMessageDialog(this, "Age must be positive!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Age must be an integer", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        gpa = Double.parseDouble(gpaText);
        if (gpa < 0 || gpa > 4.0) {
            JOptionPane.showMessageDialog(this, "GPA must be between 0 and 4.0!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        gpaText = gpaText.trim().toUpperCase();
        switch (gpaText) {
            case "A+": gpa = 4.0; break;
            case "A":  gpa = 4.0; break;
            case "A-": gpa = 3.7; break;
            case "B+": gpa = 3.3; break;
            case "B":  gpa = 3.0; break;
            case "B-": gpa = 2.7; break;
            case "C+": gpa = 2.3; break;
            case "C":  gpa = 2.0; break;
            case "C-": gpa = 1.7; break;
            case "D+": gpa = 1.3; break;
            case "D":  gpa = 1.0; break;
            case "F":  gpa = 0.0; break;
            default:
                JOptionPane.showMessageDialog(this, "Invalid GPA or Grade (e.g., use A, B+, 3.5, etc.)", "Error", JOptionPane.ERROR_MESSAGE);
                return;
        }
    }

if (age <= 0) {
    JOptionPane.showMessageDialog(this, "Age must be positive!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

if (gpa < 0 || gpa > 4.0) {
    JOptionPane.showMessageDialog(this, "GPA must be between 0 and 4.0!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

if (mr.updateStudent(id, id1, name, age, gender, department, gpa)) {
    JOptionPane.showMessageDialog(this, "Student updated successfully!");
    displayAll();
    clearForm();
} else {
    JOptionPane.showMessageDialog(this, "Student update failed!");
}

        
       
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        displayAll();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSortNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortNameActionPerformed
       mr.sortByName();
       btnRefreshActionPerformed(null);
       
    }//GEN-LAST:event_btnSortNameActionPerformed

    private void btnSortIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortIdActionPerformed
        mr.sortByID();
         btnRefreshActionPerformed(null);
    }//GEN-LAST:event_btnSortIdActionPerformed

    private void btnSortGpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortGpaActionPerformed
       mr.sortByGPA();
        btnRefreshActionPerformed(null);
    }//GEN-LAST:event_btnSortGpaActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed

    }//GEN-LAST:event_txtIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearchId;
    private javax.swing.JButton btnSortGpa;
    private javax.swing.JButton btnSortId;
    private javax.swing.JButton btnSortName;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> departmentBox;
    private javax.swing.JComboBox<String> genderBox;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable studentTable;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtGPA;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchAndUpdatePanel().setVisible(true);
            }
        });
   
}
}


